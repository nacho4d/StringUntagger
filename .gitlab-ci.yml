
build_package:
  stage: build
  script:
    - swift build --configuration release

run_unit_tests:
  stage: test
  script:
    # Build tests via spm so xchtmlreport is fetched, built and it is usable in later steps
    - swift build --build-tests
    # Test using xcode to generate xcresult file so it is convertible to junit and html report
    - swift package generate-xcodeproj
    - XCODE_TEST_RESULTS=xcodeTestResults.xcresult
    - rm -rf $XCODE_TEST_RESULTS
    - xcodebuild -project ./StringTagProcessor.xcodeproj -scheme StringTagProcessor-Package test  -resultBundlePath $XCODE_TEST_RESULTS -quiet
    - .build/debug/xchtmlreport -r $XCODE_TEST_RESULTS -j
    - mv ${XCODE_TEST_RESULTS}/report.junit report.junit
    - find ${CI_PROJECT_DIR} -name index.html
    - find ${CI_PROJECT_DIR} -name report.junit
  artifacts:
    paths:
      - index.html
    reports:
      junit: report.junit
  tags:
    - ios
